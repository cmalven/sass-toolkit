@import "strip-unit";

// =========================================================================
//
//  PRECISE CONTROL OVER RESPONSIVE SIZING FOR SASS
//  ---------------------------------------------------
//  Indrek Paas @indrekpaas
//
//  Inspired by Mike Riethmuller's Precise control over responsive typography
//  http://madebymike.com.au/writing/precise-control-responsive-typography/
//
// =========================================================================

/// @param {list} $properties - list of properties to use
/// @param {string} $min-vw - minumum viewport width for values
/// @param {string} $max-vw - maximum viewport width for values
/// @param {string} $min-value - minimum value
/// @param {string} $max-value - maximum value
/// @param {boolean} $negative - whether the value range should be negative
/// @param {string} $scale - value to multiply all values by
/// @param {string} $adjust - pixel amount to adjust all values by

@mixin fluid($properties, $min-vw, $max-vw, $min-value, $max-value, $negative: false, $scale: 1, $adjust: 0px, $include-min: true, $include-max: true) {
  @if $negative {
    $min-value: $min-value * -1;
    $max-value: $max-value * -1;
  }

  $min-value: ($min-value * $scale) + $adjust;
  $max-value: ($max-value * $scale) + $adjust;
  
  @if $include-min {
    @each $property in $properties {
      #{$property}: $min-value;
    }
  }

  @media screen and (min-width: $min-vw) {
    @each $property in $properties {
      #{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
    }
  }

  @if $include-max {
    @media screen and (min-width: $max-vw) {
      @each $property in $properties {
        #{$property}: $max-value;
      }
    }
  }
}
